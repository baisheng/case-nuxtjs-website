/* ==========================================================================
   #BUTTONS
   ========================================================================== */

/**
 * 1. Apply (btn--info) background if `c-btn--{style}` class isn't specified.
 * 2. Align icon (if placed inside button) with text properly.
 * 3. Add dropdown icon/arrow to button with `has-dropdown` class, it depends
 *    on (FontAwesome) icon font so make sure to modify it if you changed your
 *    base icon font.
 * 4. Use `disabled` property on <button> elements, and `is-disabled` class on
 *    <a> elements as they don't support `disabled` property.
 */

.c-btn {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding-left: 2rem;
  padding-right: 2rem;
  //position: relative;
  //max-width: 100%;
  //margin: 0;
  //padding: $btn-padding;
  transition: all 0.15s ease-in-out;
  border-radius: 9999px;
  //padding-left: 2rem;
  //padding-right: 2rem;
  margin-right: 40px;
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.29);
  //line-height: 84px;
  //border: $btn-border-width solid;
  //border-radius: $btn-border-radius;
  //border-color: $btn-border-color; /* [1] */
  color: $btn-color; /* [1] */
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  text-align: center;
  text-overflow: ellipsis;
  white-space: nowrap;
  cursor: pointer;
  overflow: hidden;
  vertical-align: middle;
  user-select: none;
  //cursor: pointer;
  //transition: all ease-in-out 100ms;
  @include linear-gradient(to bottom, $blue-300, $blue-400); /* [1] */
  //background: linear-gradient(-179deg, #F4F4F4 0%, #C0C0C0 100%);
  box-shadow: 0 5px 6px -4px rgba(0, 0, 0, 0.22), 0 10px 13px -4px rgba(0, 0, 0, 0.34), inset 0 30px 30px 0 rgba(255, 255, 255, 0.35), inset 0 -30px 30px 0 rgba(0, 0, 0, 0.10);
  &:hover,
  &:focus {
    //outline: 0;
    //color: $btn-hover-color;
    text-decoration: none;
  }

  i {
    position: relative;
    //bottom: -1px; /* [2] */
    //font-size: $btn-font-size;
    font-size: 18px;
  }

  &.has-dropdown {
    position: relative;
    padding-right: 2.5rem;

    &::after { /* [3] */
      display: inline-block;
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      margin-left: 1.25rem;
      padding: 0.5rem 8px;
      border-left: 1px solid;
      border-color: inherit;
      color: inherit;
      font-family: $base-icon-font;
      content: "\f107"; // fa-angle-down
    }
  }

  &.is-disabled,
  &:disabled { /* [4] */
    border-color: $btn-disabled-border-color;
    background: $btn-disabled-background-color;
    color: $btn-disabled-color;

    &:hover,
    &:focus {
      border-color: $btn-disabled-border-color;
      background: $btn-disabled-background-color;
      color: $btn-disabled-color;
      cursor: not-allowed;
    }
  }
}

.c-btn {
  //height: 2.625rem;
  height: 3rem;
  transition: -webkit-box-shadow 0.15s ease, -webkit-transform 0.15s ease;
  will-change: box-shadow, transform;
}

.c-btn--reset {
  background-color: transparent;
  border-width: 0;
}

.c-btn--fullwidth {
  width: 100%;
}

/**
 * 1. Reduce spacing between the icon and text in small buttons.
 */

.c-btn--small {
  padding: $btn-small-padding;
  font-size: $btn-small-font-size;

  i {
    margin-right: 5px; /* [1] */
  }
}

.c-btn--large {
  padding: $btn-large-padding;
  font-size: $btn-large-font-size;
}

/* Style variants
   ========================================================================== */

/**
 * Buttons have a simple, nice gradient on the background, we use
 * sass's `darken()` method to generate a dark shade of the requested color,
 * then we use our `linear-gradient` mixin to generate the background gradient.
 */

.c-btn--primary {
  @include linear-gradient(to bottom, #a6fd00, #2a9c14);
  border-color: $gradient-green;
  color: #fff;
  box-shadow: 0 7px 13px -3px rgba(19, 57, 0, 0.3), 0 2px 4px 0 rgba(42, 156, 20, 0.4), inset 0 -2px 0 0 #2a9c14;
  text-shadow: 0 1px 0 rgba(31, 113, 0, 0.29);

  &:hover {
    color: #fff;
    @include linear-gradient(to bottom, #a6fd00, #2a9c14);
    text-shadow: 0 1px 0 rgba(31, 113, 0, 0.29);
    box-shadow: 0 11px 16px -3px rgba(19, 57, 0, 0.3), 0 4px 5px 0 rgba(27, 92, 0, 0.4), inset 0 -2px 0 0 #2a9c14;
    transform: translateY(-2px)
  }

  &:focus {
    color: #fff;
    @include linear-gradient(to bottom, #a6fd00, #2a9c14);
    text-shadow: 0 1px 0 rgba(31, 113, 0, 0.29);
    box-shadow: 0 11px 16px -3px rgba(31, 113, 0, 0.3), 0 4px 5px 0 rgba(27, 92, 0, 0.4), inset 0 -2px 0 0 #2a9c14;
    transform: translateY(-2px)
    //@include linear-gradient(to bottom, darken($gunmetal-100, 6%), darken($gunmetal-500, 6%));
  }
}
.c-btn--secondary {
  //background: linear-gradient(#fff, #e4e4e9);
  background: linear-gradient(#fff, #e4e4e9);
  //@include linear-gradient(to bottom, $white, $grey-200);
  box-shadow: 0 7px 14px -3px rgba(45,35,66,0.3), 0 2px 4px 0 rgba(45,35,66,0.4), inset 0 -2px 0 0 #cfd1e3;
  //box-shadow: 0 7px 14px -3px rgba(45, 35, 66, 0.3), 0 2px 4px 0 rgba(45, 35, 66, 0.4), inset 0 -2px 0 0 #cfd1e3;
  &:hover {
    //@include linear-gradient(to bottom, darken($white, 1%), darken($grey-200, 2%));
    color: $gunmetal-200;
    box-shadow: 0 11px 16px -3px rgba(45, 35, 66, 0.3), 0 4px 5px 0 rgba(45, 35, 66, 0.4), inset 0 -2px 0 0 #cfd1e3;
    transform: translateY(-2px)
  }

  &:focus {
    @include linear-gradient(to bottom, darken($white, 2%), darken($grey-200, 3%));
    color: $gunmetal-200;
    box-shadow: 0 11px 16px -3px rgba(45, 35, 66, 0.3), 0 4px 5px 0 rgba(45, 35, 66, 0.4), inset 0 -2px 0 0 #cfd1e3;
    transform: translateY(-2px)
  }
}

//.c-btn--secondary:hover {
//  box-shadow: 0 11px 16px -3px rgba(45, 35, 66, 0.3), 0 4px 5px 0 rgba(45, 35, 66, 0.4), inset 0 -2px 0 0 #cfd1e3;
//  transform: translateY(-2px)
//}

//.c-btn--secondary:active {
//  background-image: -webkit-gradient(linear, left bottom, left top, from(#fff), to(#e4e4e9));
//  background-image: linear-gradient(to top, #fff, #e4e4e9);
//  box-shadow: inset 0 2px 0 1px rgba(132, 138, 184, 0.11), inset 0 2px 9px 0 rgba(93, 100, 148, 0.5), inset 0 -1px 0 1px #fff;
//  transform: translateY(2px)
//}
.c-btn--info {
  @include linear-gradient(to bottom, $blue-300, $blue-400);
  border-color: $blue-500;

  &:hover {
    @include linear-gradient(to bottom, darken($blue-300, 4%), darken($blue-400, 4%));
  }

  &:focus {
    @include linear-gradient(to bottom, darken($blue-300, 6%), darken($blue-400, 6%));
  }
}

.c-btn--success {
  @include linear-gradient(to bottom, $green-300, $green-400);
  border-color: $green-500;

  &:hover {
    @include linear-gradient(to bottom, darken($green-300, 4%), darken($green-400, 4%));
  }

  &:focus {
    @include linear-gradient(to bottom, darken($green-300, 6%), darken($green-400, 6%));
  }
}

.c-btn--fancy {
  @include linear-gradient(to bottom, $purple-300, $purple-500);
  border-color: $purple-500;

  &:hover {
    @include linear-gradient(to bottom, darken($purple-300, 4%), darken($purple-500, 4%));
  }

  &:focus {
    @include linear-gradient(to bottom, darken($purple-300, 6%), darken($purple-500, 6%));
  }
}

.c-btn--warning {
  @include linear-gradient(to bottom, $orange-300, $orange-500);
  border-color: $orange-500;

  &:hover {
    @include linear-gradient(to bottom, darken($orange-300, 4%), darken($orange-500, 4%));
  }

  &:focus {
    @include linear-gradient(to bottom, darken($orange-300, 6%), darken($orange-500, 6%));
  }
}

.c-btn--danger {
  @include linear-gradient(to bottom, $red-100, $red-300);
  border-color: $red-300;

  &:hover {
    @include linear-gradient(to bottom, darken($red-100, 4%), darken($red-300, 4%));
  }

  &:focus {
    @include linear-gradient(to bottom, darken($red-100, 6%), darken($red-300, 6%));
  }
}
